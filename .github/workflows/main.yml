name: FastAPI CI/CD

on:
  # Trigger the workflow on push
  push:
    branches:
      # Push events on main branch
      - main

jobs:
  CI:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:
      # Check out repo so our workflow can access it
      - uses: actions/checkout@v2

      # Step-1 Setup Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version:3.10
      # Step-2 Install Virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Step-3 Setup Virtual ENV
      - name: Virtual ENV
      uses: actions/cache@v2
      id: cache-venv
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt')}}
        restore-keys: /
          ${{ runner.os }}-venv-

      # Step-4 Build a Virtual ENV, but only if it doesn't already exist
      - name: Activate Virtual ENV
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt     
        if: steps.cache-venv.outputs.cache-hit != 'true'
      
      - name: Run Tests
        run: . venv/bin/activate && pytest

      - name: Create archive of dependencies
        run: /
          cd ./venv/lib/python3.10/site-packages
          zip -r9 ../../../../api.zip .

      - name: Add API files to Zip file
        run: cd ./api && zip -g ../api.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip